#### Android intents When apps are running the system manages tasks separately for each window; each window may have multiple tasks. 
When the current activity starts another, the new activity is pushed on the top of the stack and takes focus. 
The previous activity remains in the stack, but is stopped. When an activity stops, the system retains the current
state of its user interface. When the user presses the Back button.
#### Managing Tasks The way Android manages tasks and the back stack, as described above—by placing all activities started 
in succession in the same task and in a "last in, first out" stack—works great for most apps and you 
shouldn't have to worry about how your activities are associated with tasks or how they exist in the 
back stack. 
Using Intent flags When starting an activity, you can modify the default association of an activity to its task by including
flags in the intent that you deliver to startActivity(). The flags you can use to modify the default behavior are:
FLAG_ACTIVITY_NEW_TASK,FLAG_ACTIVITY_SINGLE_TOP,FLAG_ACTIVITY_CLEAR_TOP




