### What Unit Testing Isn’t

First, let’s clear up any misconceptions by talking about what doesn’t count.  Not every test you could 
conceivably write qualifies as a unit test.
If you write code that stuffs things into a database or that reads a file from disk, you have not written a
unit test.  Unit tests don’t deal with their environment and with external systems to the codebase.  If it
you’ve written something that can fail when run on a machine without the “proper setup,” you haven’t
written a unit test.

In C#, you can think of a unit as a method.  You thus write a unit test by writing something that tests
a method.  Oh, and it tests something specific about that method in isolation.  Don’t create something called 
TestAllTheThings and then proceed to call every method in a namespace.

Anatomy of a Unit Test
Let’s do a brief post-mortem in the form of looking at the bits and pieces of this test.  But first, 
let’s do a bit of renaming.


First off, we have a class called “CalculatorTests,” indicating that it will contain tests for the calculator
class.  (Other ways to conceptually organize your tests exist but consider that an advanced topic.)  It gets 
an attribute called “TestClass” to tell Visual Studio’s default test runner and framework, MSTest, that this
class contains unit tests.

### About xUnit.net
xUnit.net is a free, open source, community-focused unit testing tool for the .NET Framework. Written by the
original inventor of NUnit v2, xUnit.net is the latest technology for unit testing C#, F#, VB.NET and other 
.NET languages. xUnit.net works with ReSharper, CodeRush, TestDriven.NET and Xamarin. It is part of the .NET
Foundation, and operates under their code of conduct. It is licensed under Apache 2 (an OSI approved license).

### Where does the term "README" come from?

The nomenclature dates back to at least the 1970s and the PDP-10, though it may even harken back to the days
of informative paper notes placed atop stacks of punchcards, "READ ME!" scrawled on them, describing their use.

A reader1 suggested that the title README may be a playful nudge toward Lewis Carroll's Alice's Adventures 
in Wonderland, which features a potion and a cake labelled "DRINK ME" and "EAT ME", respectively.

The pattern of README appearing in all-caps is a consistent facet throughout history. In addition to the visual
strikingness of using all-caps, UNIX systems would sort capitals before lower case letters, conveniently putting
the README before the rest of the directory's content2.

The intent is clear: "This is important information for the user to read before proceeding." Let's explore 
together what constitutes "important information" in this modern age.
The README: Your one-stop shop
A README is a module consumer's first -- and maybe only -- look into your creation. The consumer wants
a module to fulfill their need, so you must explain exactly what need your module fills, and how effectively it does so.

